# {{ ansible_managed }}
#
# quality.metio.wtf
#

server {
    listen 80;
    listen [::]:80;
    server_name {{ public_url }};

    # allow access for letsencrypt
    # letsencrypt certonly --webroot -w /var/www/{{ public_url }} -d {{ public_url }}
    location /.well-known {
        allow all;
        root /var/www/{{ public_url }};
        try_files $uri $uri/ =404;
    }

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    location / {
        return 301 https://$server_name$request_uri;
    }
}

map $upstream_http_x_frame_options $qxfo {
  '' DENY;
}
map $upstream_http_x_content_type_options $qxcto {
  '' nosniff;
}
map $upstream_http_x_xss_protection $qxxp {
  '' "1; mode=block";
}
map $upstream_http_strict_transport_security $qsts {
  '' "max-age=63072000; includeSubDomains";
}
map $upstream_http_content_security_policy $qcsp {
  '' "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self'; child-src 'none'; object-src 'none'";
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ public_url }};

    ssl_certificate         /etc/letsencrypt/live/{{ public_url }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ public_url }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ public_url }}/fullchain.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_protocols TLSv1.2;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # proxy all requests to SonarQube
    location / {
        proxy_pass          http://sonarqube;
        proxy_read_timeout  180;
        proxy_set_header    Host               $http_host;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto  $scheme;

        add_header X-Frame-Options $qxfo;
        add_header X-Content-Type-Options $qxcto;
        add_header X-XSS-Protection $qxxp;
        add_header Strict-Transport-Security $qsts;
        add_header Content-Security-Policy $qcsp;
    }
}
